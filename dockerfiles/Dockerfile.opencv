# From docker with cuda
# FROM cuda/python:cuda8.0-cudnn6-py27-py35
FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04

# Install python2.8 & python3.5
RUN apt-get -y update && apt-get install -y nano python2.8 python-pip python-dev python-imaging
RUN python -m pip install pip setuptools python-dateutil --upgrade
RUN python -m pip install scikit-image scikit-learn
RUN apt-get -y update && apt-get install -y nano python3.5 python3-pip python3-dev python3-pil
RUN python3 -m pip install pip setuptools python-dateutil --upgrade
RUN python3 -m pip install scikit-image scikit-learn

# Install dependencies
RUN apt-get update \
	&& apt-get install -y unzip wget build-essential \
		cmake git pkg-config libswscale-dev \
		libtbb2 libtbb-dev libjpeg-dev \
		libpng12-dev libtiff-dev libjasper-dev \
		libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev \
		libavcodec-dev libavformat-dev libswscale-dev libxine2-dev \
		libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev \
		libv4l-dev libtbb-dev libmp3lame-dev \ 
		libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev \
		libvorbis-dev libxvidcore-dev v4l-utils libv4l-dev
	
# Install opencv	
RUN cd / \
	&& git clone --recursive https://github.com/opencv/opencv \
	&& cd opencv \
	&& mkdir build \
	&& cd build \
	&& cmake \ 
	   -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \ 
	   -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_OPENGL=ON \ 
	   -D WITH_CUBLAS=ON -DCUDA_NVCC_FLAGS="-D_FORCE_INLINES"\ 
	    .. \
	&& make -j9 \
	&& make install \
	&& cd ../.. 

# Install references
RUN bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.cong'
RUN ldconfig
RUN apt-get update
